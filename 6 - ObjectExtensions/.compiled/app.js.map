{"version":3,"sources":["../src/app.js"],"names":["console","log","obj1","a","obj2","b","obj","Object","assign","numberSign","Math","sign","numberTrunc","trunc","name","startsWith","endsWith","numberNaN","NaN","validNumber","Number","isNaN","isFinite","array","Array","array2","of","fill","find","value","inventory","quantity","findCherries","fruit","arr","copyWithin","it","entries","element"],"mappings":"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","file":"app.js","sourcesContent":["/**\r\n * Object Extensions\r\n */\r\n\r\nconsole.log('\\nOBJECT EXTENSIONS');\r\nconst obj1 = {a: 1}\r\nconst obj2 = {b: 2}\r\n\r\nlet obj = Object.assign(obj1, obj2);\r\nconsole.log('Merging objects: ', obj1);\r\nconsole.log(obj === obj1);\r\nobj = Object.assign({}, obj1, obj2);\r\nconsole.log(obj === obj1);\r\n\r\n/**\r\n * The Math Object\r\n */\r\n\r\nconsole.log('\\nTHE MATH OBJECT');\r\nlet numberSign = -10;\r\nconsole.log('Number sign\\n',Math.sign(numberSign)); // return -1 if the number is negative and 1 if the number is positive and 0 if the number is 0 \r\n\r\nlet numberTrunc = 3.78\r\nconsole.log('Number trunc \\n',Math.trunc(numberTrunc)); // cut all the decimal place, and just return the integer number\r\n\r\n/**\r\n * String\r\n */\r\nconsole.log('\\nSTRING');\r\n let name = 'Fernando';\r\n\r\n console.log(name, 'starts with Fer ?', name.startsWith('Fer'));\r\n console.log(name, 'ends with nando ?', name.endsWith('nando'));\r\n console.log(name, 'contains the word \\'erna\\' ?', name.endsWith('erna'));\r\n\r\n /**\r\n  * Number Object\r\n  */\r\n\r\n console.log('\\nNUMBER OBJECT');\r\nlet numberNaN = NaN;\r\nlet validNumber = 999999999999999;\r\nconsole.log('Object numberNaN is a number ?', !Number.isNaN(numberNaN));\r\nconsole.log('Object validNumber is finite ?', Number.isFinite(validNumber));\r\n\r\n/**\r\n * Arrays\r\n */\r\n\r\nconsole.log('\\nARRAYS')\r\n\r\nlet array = Array(5); // lock array in 5 positions\r\nconsole.log(array);\r\n\r\nlet array2 = Array.of(5, 10, 15, 20);\r\nconsole.log(array2)\r\n\r\n// let newArray = array2.from(array2, value => value*2 ); it's not working\r\n\r\narray.fill(100, 0, 2);\r\nconsole.log(array);\r\n\r\nconsole.log('\\nUsing the find method for array\\n',array2.find(value => { // stop after the first match\r\n    return value >= 12;\r\n}));\r\n\r\n\r\nlet inventory = [\r\n    {name: 'apples', quantity: 2},\r\n    {name: 'bananas', quantity: 0},\r\n    {name: 'cherries', quantity: 5}\r\n]\r\n\r\nfunction findCherries(fruit) {\r\n    return fruit.name === 'cherries';\r\n}\r\n\r\nconsole.log(inventory.find(findCherries));\r\n\r\nlet arr = ['a', 'b', 'c'];\r\n\r\nconsole.log(['a', 'b', 'c'].copyWithin(1, 2)); // copia o item da terceira posicao para a segunda (metodo destrutivo)\r\n\r\nconsole.log('\\nEntries: ')\r\nlet it = arr.entries();\r\nfor(let element of it) {\r\n    console.log(element);\r\n}\r\n"]}